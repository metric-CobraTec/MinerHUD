{"slots":{"0":{"name":"screen","type":{"events":[],"methods":[]}},"1":{"name":"container","type":{"events":[],"methods":[]}},"2":{"name":"screen2","type":{"events":[],"methods":[]}},"3":{"name":"slot4","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-2":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"-- initiate flush\ninitiate = false\n\n-- initiate settings\nalarm = nil\nalarmClock = 0\nseconds = 0\ndisplayVersion = ''\ndisplayExit = ''\ncurrentVersion = '1'\nminusLiters = 0 --export\n\n-- initiate export settings\nunitRange = 2300 --export: set your maximum unit range fe remote/programming board\nlinkedRange = 100 --export: set your maximum linked range\nshowDistanceTriangleColors = true --export: show distance meter triangle colors\nmaximumKG = 1000 --export: set maximum container kg for transport\nversion = true --export: display version number on hud\nshowExit = true --export: display text for manual shutdown\nenableUnitPanel = true --export: allow hiding or showing unit panel (bottom right)\norePrice = 25.01 --export: set indication ore price for calculating profit\ncolorSchemeDefault = true --export: default and fall back color scheme\ncolorSchemeOrange = false --export: orange theme\ncolorSchemeRed = false --export: red theme\ncolorSchemeCyan = false --export: cyan theme\n\n-- process set color scheme\nif colorSchemeDefault == true then\n    colorScheme = \"default\"\nelseif colorSchemeOrange == true then\n    colorScheme = \"orange\"\nelseif colorSchemeRed == true then\n    colorScheme = \"red\"\nelseif colorSchemeCyan == true then\n    colorScheme = \"cyan\"\nelse\n    colorScheme = \"default\"\nend\n\nif version == true then\n   displayVersion = ' V' .. currentVersion\nend\n\nif showExit == true then\n    displayExit = '<div>CTRL + BACKSPACE: Shutdown</div>'\nend\n\n-- hide default unit panel\nunit.hide()\n\n-- panel creation\nif enableUnitPanel == true then\n    -- set panel name\n    panel = \"Minerhud\"\n    -- create panel\n    system.createWidgetPanel(panel) \nend\n\n-- start timer\nself.setTimer('update',1)","filter":{"args":[],"signature":"start()","slotKey":"-1"},"key":"0"},{"code":"\n\nfunction SecondsToClock(seconds)\n    local seconds = tonumber(seconds)\n    if seconds <= 0 then\n        return \"00:00:00\";\n    else\n        hours = string.format(\"%02.f\", math.floor(seconds/3600));\n        mins = string.format(\"%02.f\", math.floor(seconds/60 - (hours*60)));\n        secs = string.format(\"%02.f\", math.floor(seconds - hours*3600 - mins *60));\n        return hours..\":\"..mins..\":\"..secs\n    end\nend\n\n-- number to thousands\nfunction format_thousand(v)\n    local s = string.format(\"%d\", math.floor(v))\n    local pos = string.len(s) % 3\n    if pos == 0 then pos = 3 end\n    return string.sub(s, 1, pos)\n    .. string.gsub(string.sub(s, pos+1), \"(...)\", \",%1\")\n    .. string.sub(string.format(\"%.2f\", v - math.floor(v)), 2)\nend\n\nfunction colorPrimary(colorScheme)   \n    -- defaul color\n    color = 'transparant' \n    --94, 94, 94\n    if colorScheme == 'orange' then\n        color = '255, 145, 0'        \n    end    \n    if colorScheme == 'cyan' then\n        color = '0, 238, 255'        \n    end       \n    if colorScheme == 'red' then\n        color = '255, 82, 82'        \n    end        \n    return color\nend\n\nfunction colorSecondary(colorScheme)\n    -- defaul color\n    color = 'transparant'   \n    --181, 181, 181\n    if colorScheme == 'orange' then\n        color = '71, 41, 0'        \n    end \n    if colorScheme == 'cyan' then\n        color = '0, 64, 69'        \n    end   \n        if colorScheme == 'red' then\n        color = '87, 29, 29'        \n    end  \n    return color\nend\n\ntimestamp = system.getTime()\nliters = container.getItemsVolume() - minusLiters\n\nif orePrice > 0 then\n    value = liters * orePrice\nelse\n    value = \"DISABLED\"\nend\n\ncontainer = container.getItemsMass()\n\n-- fix wrong hub container information\nkg = container or 0\nif liters == 0 then\n    kg = 0\nend\n\nton = kg / 1000 or 0\nkton = kg / 1000000 or 0\n\nif ton < 0.1 then\n    ton = 0\nend\n\nif kg < 100 then\n    kton = 0\nend\n\ninject = ''\nif kg >= maximumKG then  \n    inject = '<div class=\"container alert-red\">ALERT: Maximum Weight Reached!</div>' \nend\n\nseconds = seconds + 1\n\ninjectAlarmClock = ''\nif alarm == true then\n    alarmClock = alarmClock + 1\nend\n\nif alarm == true then\n    injectAlarmClock = '<div class=\"container alert-orange\">ALERT: Countdown Activated!</div>'\nend\n\n-- alarm clock countdown sec\nif alarmClock >= 5 and alarm == true then\n    injectAlarmClock = '<div class=\"container alert-red\">ALERT: Territory Scan Complete!</div>'\nend\n\nfunction getTime(seconds)\n    if seconds >= 60 then\n        period = 'Minutes'\n        time = seconds / 60        \n else\n        period = 'Seconds'\n        time = seconds\n    end\n    return period, time \nend\n\nfunction getTriangleColor(showDistanceTriangleColors,color)    \n    output = ''    \n    if showDistanceTriangleColors == true then   \n        output = \"color:\" .. color .. \";\"\n    end    \n    return output\nend\n\n-------------------------------------------------------------------------------------------\n-------------------------------------------------------------------------------------------\n-- player distance from unit\nlocal player = vec3(unit.getMasterPlayerRelativePosition()):len()\n\n-- get percentage player distance from unit\nper = (player / unitRange) * 100\n-- get percentage player distance from linked container\nremainingLinkedRangePer = (player / linkedRange) * 100\n\n-- limit percentage linked container up to 100\nif remainingLinkedRangePer > 100 then\n    remainingLinkedRangePer = 100\nend\n-- limit lower percentage linked container to 0  \nif remainingLinkedRangePer < 1 then\n    remainingLinkedRangePer = 0\nend\n\n-- limit percentage linked container up to 100\nif per > 100 then\n    per = 100\nend\n-- limit lower percentage linked container to 0  \nif per < 1 then\n    per = 0\nend\n\n-- CSS Validator Results: valid, no errors\n-- HTML Validator Results: Valid, basic\nhtml = [===[\n<style> \nbody{\nopacity: 0.8;\n}\n.title{\ntop:0;\nleft:0;\nright:0;\nposition:fixed;\n}\n.logo{\nfont-size:0.5vw;\nfont-weight: bold;\npadding-left:1vw;\n}    \n.container{\nmax-width:50vw;\nfont-size:0.5vw;\ncolor:rgb(255, 145, 0);\nbackground-color:rgb(71, 41, 0);\nborder:0.2vw solid rgb(255, 145, 0);\npadding:0.5vw;\n} \n.row{\nbackground-color:rgb(]===]..  colorSecondary(colorScheme) ..[===[);\ncolor:rgb(]===]..  colorPrimary(colorScheme) ..[===[);\nborder-bottom:0.2vw solid rgb(]===]..  colorPrimary(colorScheme) ..[===[);\n}\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n.column {\nfloat: left;\nwidth: 14%;\nfont-size:0.7vw;\n}\n.column span{\nmargin-left:1vw;\nopacity: 0.5;\n} \n.alert-red{\ncolor:rgb(255, 82, 82);\nbackground-color:rgb(87, 29, 29);\nborder:1px solid rgb(255, 82, 82);\nmargin-bottom:0.5vw;\nmax-width:200px;\n}\n.alert-orange{\ncolor:rgb(255, 145, 0);\nbackground-color:rgb(71, 41, 0);\nborder:1px solid rgb(255, 145, 0);\nmargin-bottom:0.5vw;\nmax-width:200px;\n}\n\n/* OUR DISTANCE METER HUD COMPONENT */\n.distance-meter{\ntext-align:right;\ncolor:white;\nmax-width:25vw;\nopacity:0.5;\nmargin: 0 auto;\n}  \n.linked-range{\nborder-left:1px solid white;\nborder-right:1px solid white;\nborder-bottom:1px solid white;\nposition:relative;\n} \n.unit-range{\nborder-left:1px solid white;\nborder-right:1px solid white;\nposition:relative;\n}  \n.triangle-down{\nposition:absolute;\nleft:0;\nmargin-left:-6px;\n/*color:red;*/\n]===] .. getTriangleColor(showDistanceTriangleColors,\"red\") .. [===[\n\n}  \n.triangle-up{\nposition:absolute;\nmargin-left:-6px;\n/*color:dodgerblue;*/\n]===] .. getTriangleColor(showDistanceTriangleColors,\"dodgerblue\") .. [===[\n\n}\n</style>\n\n<div class=\"row title\">\n<div class=\"logo column\">MinerHud ]===] .. displayVersion .. [===[</div>\n<div class=\"column\">]===]..  string.format(\"%.2f\", kton) ..[===[<span>Kt</span></div>\n<div class=\"column\">]===]..  string.format(\"%.2f\", ton) ..[===[<span>T</span></div>\n<div class=\"column\">]===]..  string.format(\"%.2f\", kg) ..[===[<span>Kg</span></div>\n<div class=\"column\">]===]..  string.format(\"%.2f\", liters) ..[===[<span>L</span></div>\n<div class=\"column\">]===]..  format_thousand(value) ..[===[<span>Quanta</span></div>\n<div class=\"column\">]===]..  SecondsToClock(seconds) ..[===[<span>Elapsed Time</span></div>\n</div>\n\n<div class=\"distance-meter\">\n    <div class=\"linked-range\">\n    <div class=\"triangle-up\" style=\"padding-left:]===] .. string.format(\"%.f\",remainingLinkedRangePer) .. [===[%;\">&#9660;</div>\n    <span style=\"margin:10px;\">]===] .. string.format(\"%.f\",player) .. [===[/]===]..  linkedRange ..[===[ Max Linked Range</span>\n    </div>\n    <div class=\"unit-range\">\n    <div class=\"triangle-down\" style=\"padding-left:]===] .. string.format(\"%.f\",per) .. [===[%;\">&#9650;</div>\n    <span style=\"margin:10px;\">]===] .. string.format(\"%.f\",player) .. [===[/]===]..  unitRange ..[===[ Max Unit Range</span>\n    </div>\n</div>\n]===]\nhtml = html .. inject\nhtml = html .. injectAlarmClock\nhtml = html .. displayExit\nsystem.setScreen(html)\nsystem.showScreen(1)\n\nformat = value/seconds\nsystem.print(\"Value p/s: \" .. string.format(\"%.2f\",format))\n\n\nhtmlScreen = [===[\n<style>\nbody{\nbackground-color:rgb(28, 20, 0);\n}\n\n.title{\nfont-size:4vw;\ncolor:rgb(255, 145, 0);\nbackground-color:rgb(71, 41, 0);\nmargin:2vw;\nborder:0.2vw solid rgb(255, 145, 0);\n}\n\n.container{\nfont-size:3vw;\ncolor:rgb(255, 145, 0);\nmargin:2vw;\n}\n\n.container::after {\ncontent: \"\";\nclear: both;\ndisplay: table;\n}\n    \n.column{\nwidth:25%;\nheight:10vw;\nfloat:left;\nbackground-color:blue;\nposition:relative;\ncolor:rgb(255, 145, 0);\nbackground-color:rgb(71, 41, 0);\nborder:0.2vw solid rgb(255, 145, 0);\nfont-size:3vw;\noverflow: auto;\npadding:1vw;\n}\n\n.item{\nposition:absolute;\nbottom:0;\nright:0;\nmargin-right:1vw;\nmargin-bottom:1vw;\n}\n.alert-red{\ncolor:rgb(255, 82, 82);\nbackground-color:rgb(87, 29, 29);\nborder:0.2vw solid rgb(255, 82, 82);\nmargin-bottom:0.5vw;\n}\n.alert-orange{\ncolor:rgb(255, 145, 0);\nbackground-color:rgb(71, 41, 0);\nborder:0.2vw solid rgb(255, 145, 0);\nmargin-bottom:0.5vw;\n}\n\n.subTitle{\nmargin:2vw;\nfont-size:3vw;\nborder-bottom:0.2vw solid rgb(255, 145, 0);\n}\n</style>\n\n<div class=\"title\">MINERHUD</div>\n<div class=\"subTitle\">Mass and Volume</div>\n<div class=\"container\">\n<div class=\"column\">]===]..  string.format(\"%.2f\",kton) ..[===[<div class=\"item\">Kt</div></div>\n<div class=\"column\">]===]..  string.format(\"%.2f\",ton) ..[===[<div class=\"item\">T</div></div>\n<div class=\"column\">]===]..  string.format(\"%.2f\",kg) ..[===[<div class=\"item\">Kg</div></div>\n<div class=\"column\">]===]..  string.format(\"%.2f\",liters) ..[===[<div class=\"item\">L</div></div>\n</div>\n\n<div class=\"subTitle\">Estimated Ore Value</div>\n<div class=\"container\">]===]..  string.format(\"%.2f\",value) ..[===[ Quanta</div>\n<div class=\"subTitle\">Notifications</div>\n]===]\nhtmlScreen = htmlScreen .. inject\nhtmlScreen = htmlScreen .. injectAlarmClock\nscreen.setHTML(htmlScreen)","filter":{"args":[{"value":"update"}],"signature":"tick(timerId)","slotKey":"-1"},"key":"1"},{"code":"-- set alarm clock status to true\nalarm = true\n\n-- reset alarm clock for counting\nalarmClock = 0","filter":{"args":[{"value":"option1"}],"signature":"actionStart(action)","slotKey":"-2"},"key":"2"},{"code":"-- check if control unit is remote and engines require shutdown\n\nif unit.isRemoteControlled() == 1 and initiate == false then\n    unit.deactivateGroundEngineAltitudeStabilization()\n    -- disable all engines\n    unit.setEngineCommand(\"ALL\",{0,0,0},{0,0,0},0,0,'','','',0)\n    -- re-disable adjusters\n    unit.setEngineCommand(\"adjustor\",{0,0,0},{0,0,0},0,0,'','','',0)\n    -- confirm engines has been disabled.\n    initiate = true\nend\n\n","filter":{"args":[],"signature":"flush()","slotKey":"-2"},"key":"3"}],"methods":[],"events":[]}
